CREATE TABLE JUSTIF_CLASSIF_ESG (
    ID_JUSTIF_CLASSIF_ESG NUMBER(10) NOT NULL PRIMARY KEY,
    EMPCOD NUMBER(3) NOT NULL,
    DAT_ANOMES DATE NOT NULL,
    PRJCOD NUMBER(9) NOT NULL,
    ID_CLASSIF NUMBER(4) NOT NULL,
    ID_SUB_CLASSIF NUMBER(4) NOT NULL,
    JUSTIFICATIVA VARCHAR2(200) NOT NULL,
	PERC_KPI NUMBER(5,2),
	STATUS_APROVACAO CHAR(1);
    DTCRIACAO DATE DEFAULT SYSDATE,
    USCRIACAO VARCHAR2(60),
    DTALTERACAO DATE,
    USALTERACAO VARCHAR2(60)
);

CREATE UNIQUE INDEX IDX_JUSTIF_CLASSIF_ESG ON JUSTIF_CLASSIF_ESG (EMPCOD, DAT_ANOMES, PRJCOD, ID_CAT_CLASSIF, ID_SUB_CAT_CLASSIF );

CREATE SEQUENCE  SERVDESK.SEQ_JUSTIF_CLASSIF_ESG  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE OR REPLACE TRIGGER SERVDESK.TGR_JUSTIF_CLASSIF_ESG_INS
BEFORE INSERT ON SERVDESK.JUSTIF_CLASSIF_ESG
FOR EACH ROW
  WHEN (NEW.ID_JUSTIF_CLASSIF_ESG IS NULL) BEGIN
  SELECT SERVDESK.SEQ_JUSTIF_CLASSIF_ESG.NEXTVAL
  INTO   :NEW.ID_JUSTIF_CLASSIF_ESG
  FROM   DUAL;
END;
/

CREATE TABLE JUSTIF_CLASSIF_ESG_ANEXO (
    ID_ANEXO INT NOT NULL,
    ID_JUSTIF_CLASSIF INT NOT NULL,
    NOME_ANEXO VARCHAR2(200) NOT NULL,
    DESCRICAO_ANEXO VARCHAR2(100),
    STATUS CHAR(1),
    DTCRIACAO DATE DEFAULT SYSDATE
);

ALTER TABLE JUSTIF_CLASSIF_ESG_ANEXO ADD CONSTRAINT PK_JUST_CLA_ANEXO PRIMARY KEY (ID_ANEXO,ID_JUSTIF_CLASSIF);
ALTER TABLE JUSTIF_CLASSIF_ESG_ANEXO ADD CONSTRAINT CK_JUST_CLA_ANEXO CHECK (STATUS IN ('A','I'));

CREATE SEQUENCE  SERVDESK.SEQ_JUST_CLASS_ESG_ANEXO MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE OR REPLACE TRIGGER SERVDESK.TGR_JUST_CLASS_ESG_ANEXO_INS
BEFORE INSERT ON SERVDESK.JUSTIF_CLASSIF_ESG_ANEXO
FOR EACH ROW
  WHEN (NEW.ID_ANEXO IS NULL) BEGIN
  SELECT SERVDESK.SEQ_JUST_CLASS_ESG_ANEXO.NEXTVAL
  INTO   :NEW.ID_ANEXO
  FROM   DUAL;
END;
/

CREATE TABLE APROVACAO_JUSTIF_CLASSIF_ESG (
    ID_APROVACAO INT NOT NULL PRIMARY KEY,
    ID_JUSTIF_CLASSIF_ESG INT NOT NULL,
    APROVACAO CHAR(1)  NOT NULL,
    DTCRIACAO DATE DEFAULT SYSDATE,
    USCRIACAO VARCHAR2(60)
);

CREATE INDEX IDX_APROV_JUSTIF_CLA ON APROVACAO_JUSTIF_CLASSIF_ESG(ID_JUSTIF_CLASSIF_ESG);
ALTER TABLE APROVACAO_JUSTIF_CLASSIF_ESG ADD CONSTRAINT FK_JUST_CLASSIF_ESG FOREIGN KEY (ID_JUSTIF_CLASSIF_ESG) REFERENCES JUSTIF_CLASSIF_ESG(ID_JUSTIF_CLASSIF_ESG);
ALTER TABLE APROVACAO_JUSTIF_CLASSIF_ESG ADD CONSTRAINT CK_APRO_JUST_CLASSIF_ESG CHECK (APROVACAO IN ('A','R','P','E'));

CREATE SEQUENCE  SERVDESK.SEQ_APRO_JUSTIF_CLASSIF_ESG  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE OR REPLACE TRIGGER SERVDESK.TGR_APRO_JUSTIF_ESG_INS
BEFORE INSERT ON SERVDESK.APROVACAO_JUSTIF_CLASSIF_ESG
FOR EACH ROW
  WHEN (NEW.ID_APROVACAO IS NULL) BEGIN
  SELECT SERVDESK.SEQ_APRO_JUSTIF_CLASSIF_ESG.NEXTVAL
  INTO   :NEW.ID_APROVACAO
  FROM   DUAL;
END;
/

CREATE TABLE ESG_APROVADORES (
    ID INT NOT NULL PRIMARY KEY,
    ID_USUARIO VARCHAR2(15) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL,
    STATUS CHAR(1) DEFAULT 'A',
    DTCRIACAO DATE DEFAULT SYSDATE
);

ALTER TABLE ESG_APROVADORES ADD CONSTRAINT CK_USU_APROV CHECK (STATUS IN ('A','I'));
CREATE UNIQUE INDEX IDX_ESG_APROV_USU ON ESG_APROVADORES (ID_USUARIO);
CREATE UNIQUE INDEX IDX_ESG_APROV_MAIL ON ESG_APROVADORES (EMAIL);


CREATE SEQUENCE  SERVDESK.SEQ_ESG_APROV  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE OR REPLACE TRIGGER SERVDESK.TGR_ESG_APROV_INS
BEFORE INSERT ON SERVDESK.ESG_APROVADORES
FOR EACH ROW
  WHEN (NEW.ID IS NULL) BEGIN
  SELECT SERVDESK.SEQ_ESG_APROV.NEXTVAL
  INTO   :NEW.ID
  FROM   DUAL;
END;
/
